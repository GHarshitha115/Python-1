Print according to postfix int 
Input:
c_code_3,hello_world_1,dictionary_2

n=input().split(',')
l=lambda x:(x.split('_')[-1])
n=sorted(n,key=l,reverse=False)
for i in range(len(n)):
    if i!=len(n)-1:
        print(n[i],end=',')
    else:
        print(n[i])

Output:
hello_world_1,dictionary_2,c_code_3

----------------------------------------------------------------------------------------------------------------


Given the names and grades for each student in a Physics class of  students, store them in a nested list and 
print the name(s) of any student(s) having the second lowest grade.

Input Format
The first line contains an integer, , the number of students.
The  subsequent lines describe each student over  lines; the first line contains a student's name, 
and the second line contains their grade.

Constraints
There will always be one or more students having the second lowest grade.
Output Format

Print the name(s) of any student(s) having the second lowest grade in Physics; if there are multiple students, 
order their names alphabetically and print each one on a new line.

Sample Input 0

5
Harry
37.21
Berry
37.21
Tina
37.2
Akriti
41
Harsh
39
Sample Output 0

Berry
Harry
Explanation 0



---------------code-------------------

marksheet = []
for _ in range(0,int(input())):
    marksheet.append([input(), float(input())])

second_highest = sorted(list(set([marks for name, marks in marksheet])))[1]
print('\n'.join([a for a,b in sorted(marksheet) if b == second_highest]))

-------------------------------------------------------------------------------------------------------------------------------------------


m=int(input())
p=m
a={};b={};result=[]
for i in range(m):
    c,p=map(int,input().split())
    a.update({c:p})
    
    
n=int(input())
for i in range(n):
    c1,p1=map(int,input().split())
    b.update({c1:p1})

a=sorted(a.items(),reverse=True)
b=sorted(b.items(),reverse=True)

if (m-n)>0:
    for i in range(m-n):
        result.append(str(a[i][1]))
elif (n-m)>0:
    for i in range(n-m):
        result.append(str(b[i][1]))
      
for i in range(m):
    for j in range(n):
        if a[i][0]==b[j][0]:
            result.append(str(a[i][1]+b[j][1]))
            
c=0
z=max(m,n)
for i in range(len(result)):
    if result[i]=='0':
        c+=1        
    
if c==len(result):
    print(0)
else:
    for i in range(len(result)):
        z=z-1
        if i!=len(result)-1 and result[i]!='0':
            print(str(result[i])+'x^'+str(z),end=' + ')
        else:
            print(result[i])


Input:
4
0 5
1 0
2 10
3 6
3
0 1
1 2
2 4

Output:
6x^3 + 14x^2 + 2x^1 + 6


---------------------------------------------------


m=int(input())

x={}
z=[]
z1=[]
for i in range(m):
    a,b=input().split()
    x.update({a:b})
#print(x)
y={}
n=int(input())
for i in range(n):
    c,d=input().split()
    y.update({c:d})
#print(y)
z={}
for i in x or y:
    if i in x and y:
        if x.get(i)!=None:
            a=x.get(i)
        else:
            a=x.get(i,0)
            print(a)
        if y.get(i)!=None:
            b=y.get(i)
        else:
            b=y.get(i,0)
        z[int(i)]=int(a)+int(b)
z=sorted(z.items(),reverse=True)
c=0
for k,v in z:
    if v!=0:
        c=c+1
    if k >1 and v!=0:
        print(str(v)+'x^'+str(k)+' + ',end='')
    elif k==1 and v!=0:
        print(str(v)+'x + ',end='')
    else:
        if(v!=0):
            print(str(v))

if(c==0):
    print('0')


Input:
4
0 5
1 0
2 10
3 6
4
0 -5
1 0
2 -10
3 -6

Output:
0


---------------------------------------------------




Input:
Anand,Ramesh,Kiran
12,11,10

Output:
Anand,12.0
Ramesh,11.0
Kiran,10.0


---------------------------------------------------

names=input().split(',')
value=input().split(',')
x=len(names)
values=[float(i) for i in value]
d={names[i]:values[i] for i in range(x)}
d=sorted(d.items(),key=lambda x:x[1],reverse=True)
for k,v in d:
    print(k,v,sep=',')


------------------------------------------------------------------------



Input:
Anand,Ramesh,Kiran
12,11,10
Ramesh

Output:
Ramesh,16.0
Anand,12.0
Kiran,10.0


---------------------------------------------------

name=input().split(',')
score=input().split(',')
names=input().split(',')
score=[float(i) for i in score]
dic={name[i]:score[i] for i in range(len(name))}
c=0
d={}

for i in names:
    if i in name:
        dic[i]=dic[i]+5.0
    else:
        dic.update({i:5.0})

dic=sorted(dic.items(),reverse=True)
dic=sorted(dic,key=lambda x:x[1],reverse=True)

for k,v in dic:
    print(k,v,sep=',')


--------------------------------------------------------------------------------------------------------


'''n=input().split()
y=n.pop()
x=ord(y)
n.append(y)
a=[]
b=[]
for i in range(len(n)):
    if '0'<=n[i]<='9' or n[i]==y:
        continue
    else:
        a.append(n[i-1])
        a.append(n[i-2])
    e=n[i-1]
    r=n[i-2]
    if n[i]=='+' or n[i]==x:
        b.append(float(e)+float(r))
    elif n[i]=='-' or n[i]==x:
        b.append(float(e)-float(r))
    elif n[i]=='*' or n[i]==x:
        b.append(float(e)*float(r))
    elif n[i]=='/' or n[i]==x: 
        b.append((float(e))//(float(r)))
        
if y=='+':
    print(float(b[0])+float(b[1]))
elif y=='-':
    print(float(b[0])-float(b[1]))
elif y=='*':
    print(float(b[0])*float(b[1]))
elif y=='/':
    print(round(float(b[0])//float(b[1])))
'''




---------mahesh------------
n=input().split()
y=n.pop()
#print(y)
#k=[int(i) for i in n if '0'<=i<='9']
#print(k)
#print(n)
result=[];d=0
for i in range(len(n)):
    if n[i]=='+':
        e=k[d]
        d=d+1
        r=k[d]
        d=d+1
        result.append(e+r)
    elif n[i]=='-':
        e=k[d]
        d=d+1
        r=k[d]
        d=d+1
        result.append(e-r)
    elif n[i]=='*':
        e=k[d]
        d=d+1
        r=k[d]
        d=d+1
        result.append(e*r)
    elif n[i]=='/':
        e=k[d]
        d=d+1
        r=k[d]
        d=d+1
        result.append(e//r)

if y=='+':
    print(result[0]+result[1])
elif y=='-':
    print((result[0]-result[1]))
elif y=='*':
    print((result[0]*result[1]))
elif y=='/':
    print((result[0]//result[1]))



if i!=len(result)-1 and result[i]!=0:
            if result[i+1]<0 and result[i]!=0:
                if z!=1:
                    print(str(abs(result[i]))+'x^'+str(z),end=' - ')
                else:
                    print(str(abs(result[i]))+'x',end=' - ')
                    
            else:
                if z!=1:
                    print(str(abs(result[i]))+'x^'+str(z),end=' + ')
                else:
                    print(str(abs(result[i]))+'x',end=' + ')
                    
        else:
            print(abs(result[i]))
            
---------------------------

4,5
ADD

Output:
9.0

def get_result(a, b, operation):
    # update operation_dict
    operation_dict = {'ADD':add,'SUBTRACT':subtract,'MULTIPLY':multiply,'DIVIDE':divide}

    func = operation_dict[operation]

    result = func(a, b)
    
    result=(round(result,2))
    
    print(result)

#def add(a, b):
#    return (a+b)
add= lambda x, y:x+y

def subtract(a, b):
    return (a-b)


def multiply(a, b):
    return (a*b)


def divide(a, b):
    return (a/b)


a, b= input().split(",")
operation=input()
a = float(a)
b = float(b)
get_result(a, b, operation)


--------------------
a=input().lower()
a=a.split()
sort_key=sorted(a)
dic_kv={i:a.count(i) for i in sort_key}
dic_kv=sorted(dic_kv.items(),key=lambda x:x[1],reverse=True)
for k,v in dic_kv:
    print(k,v,sep=',')

Input:
three Three tHrEe hi hi hi

Output:
hi,3
three,3


---------------------------------------------------

n=input().split()
a=['+','-','*','/']
b=[]
for i  in n:
    if i.isdigit()==True:
        b.append(int(i))
    elif i=='+':
        x=b.pop()
        y=b.pop()
        #r=y+x
        b.append(y+x)
    elif i=='-':
        x=b.pop()
        y=b.pop()
        #r=y-x
        b.append(y-x)
    elif i=='*':
        x=b.pop()
        y=b.pop()
        b.append(y*x)
    elif i=='/':
        x=b.pop()
        y=b.pop()
        b.append(y/x)
for i in range(len(b)):
    print(int(b[i]))

Input:
7 8 + 3 2 + /

Output:
3


---------------------------------------------------

student_math=input().split(',')
math_marks=input().split(',')
math_marks=[int(i) for  i in math_marks]
student_physics=input().split(',')
physics_marks=input().split(',')
physics_marks=[int(i) for i in physics_marks]
student_chem=input().split(',')
chem_marks=input().split(',')
chem_marks=[int(i) for i in chem_marks]
thre_input=input().split(',')
thre_input=[int(i) for i in thre_input]

a=set();b=set();c=set();min_criteria=[];passed_all=[];c1=0;count=0
#print(type(a))
for i in range(len(math_marks)):
    if math_marks[i]>=thre_input[0]:
        c1+=1
        a.add(student_math[i])
#print(a)
for i in range(len(physics_marks)):
    if physics_marks[i]>=thre_input[1]:
        c1+=1
        b.add(student_physics[i])
#print(b)
for i in range(len(chem_marks)):
    if chem_marks[i]>=thre_input[2]:
        c1+=1
        c.add(student_chem[i])
#print(c)
if c1==0:
    print('No Students')
    print('No Students')
else:    
    min_criteria=a.union(b,c)
    min_criteria=list(min_criteria)
    min_criteria.sort()
    print(",".join(min_criteria))
    passed_all=a.intersection(b,c)
    passed_all=list(passed_all)
    passed_all.sort()
    #print(",".join(passed_all))
    for i in range(len(passed_all)):
        count+=1
        if i != len(passed_all)-1:
            print(passed_all[i],end=',')
        else:
            print(passed_all[i])
    if count==0:
        print('No Students')



Input:
Ram,Naresh,Haran,Raghu
12,13,14,15
Ram,Naresh,Haran
23,24,25
Naresh,Haran,Raghu
34,35,36
14,5,6

Output:
Haran,Naresh,Raghu,Ram
Haran


---------------------------------------------------

import time
def def_time(s):
    print(s.tm_year)
    print(s.tm_mon)
    print(s.tm_mday)
    print(s.tm_hour)
    print(s.tm_min)
    print(s.tm_sec)
    print(s.tm_wday)
    print(s.tm_yday)
    print(s.tm_mon)
    print(s.tm_isdst)

print("gm-time is printed")
def_time(time.gmtime())
#time since utc
print("Local-time is printed")
def_time(time.localtime())
print(time.gmtime(36000))

Input:
12,12,1,2,2,4

Output:
gm-time is printed
2020
3
14
9
45
4
5
74
3
0
Local-time is printed
2020
3
14
9
45
4
5
74
3
0
time.struct_time(tm_year=1970, tm_mon=1, tm_mday=1, tm_hour=10, tm_min=0, tm_sec=0, tm_wday=3, tm_yday=1, tm_isdst=0)


---------------------------------------------------

import datetime
date = datetime.datetime.now()
start_date = date.replace(month=1,day=1)
print((date-start_date).days) #no.of days  -73
print(date.strftime('%U'))    #week number -10



